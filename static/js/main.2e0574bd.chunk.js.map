{"version":3,"sources":["components/Navigation.js","services/api.js","components/MoviesList.js","pages/Home.js","pages/Movie.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["NavItem","props","pageURI","window","location","pathname","search","liClassName","path","aClassName","disabled","react_default","a","createElement","className","href","name","Navigation","React","Component","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Navigation_NavItem","placeholder","api","axios","create","baseURL","MovieList","state","results","info","page","loadFilms","_callee","response","_response$data","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","get","concat","sent","data","Object","objectWithoutProperties","_this","setState","toConsumableArray","stop","nextPage","_this$state","pageNumber","this","_this$state2","films","map","film","index","key","react_router_dom","to","src","poster_path","title","pages","onClick","Home","MoviesList","Movie","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","convertToDolar","value","toFixed","replace","loadFilm","asyncToGenerator","mark","res","_ref2","match","params","movie","genres","posterPath","style","backgroundImage","backdrop_path","_this2","genre","ref","div","tagline","overview","runtime","release_date","budget","revenue","resultString","nestedArray","forEach","item","push","join","Routes","react_router","exact","component","App","components_Navigation","routes","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e0574bd.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavItem = props => {\n  const pageURI = window.location.pathname+window.location.search\n  const liClassName = (props.path === pageURI) ? \"nav-item active\" : \"nav-item\";\n  const aClassName = props.disabled ? \"nav-link disabled\" : \"nav-link\"\n  return (\n    <li className={liClassName}>\n      <a href={props.path} className={aClassName}>\n        {props.name}\n        {(props.path === pageURI) ? (<span className=\"sr-only\">(current)</span>) : ''}\n      </a>\n    </li>\n  );\n}\n\nclass NavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: false\n    };\n  }\n  showDropdown(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n  render() {\n    const classDropdownMenu = 'dropdown-menu' + (this.state.isToggleOn ? ' show' : '')\n    return (\n      <li className=\"nav-item dropdown\">\n        <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n          aria-haspopup=\"true\" aria-expanded=\"false\"\n          onClick={(e) => {this.showDropdown(e)}}>\n          {this.props.name}\n        </a>\n        <div className={classDropdownMenu} aria-labelledby=\"navbarDropdown\">\n          {this.props.children}\n        </div>\n      </li>\n    )\n  }\n}\n\n\nclass Navigation extends React.Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top bg-dark\">\n        {/* <a className=\"navbar-brand\" href=\"/\">Navbar</a> */}\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            \n            <NavItem path=\"/\" name=\"Home\" />\n            {/* <NavItem path=\"/page2\" name=\"Page2\" />\n            <NavItem path=\"/page3\" name=\"Disabled\" disabled=\"true\" /> */}\n            \n              {/* <NavDropdown name=\"Dropdown\">\n                <a className=\"dropdown-item\" href=\"/\">Action</a>\n                <a className=\"dropdown-item\" href=\"/\">Another action</a>\n                <div className=\"dropdown-divider\"></div>\n                <a className=\"dropdown-item\" href=\"/\">Something else here</a>\n              </NavDropdown> */}\n            \n          </ul>\n          <form className=\"form-inline my-2 my-lg-0\">\n            <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n          </form>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Navigation;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL:'https://api.themoviedb.org/3'\n});\n\nexport default api;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport api from '../services/api';\nimport '../styles/Styles.css';\n\nclass MovieList extends React.Component {\n    state = {\n        results: [],\n        info: {},\n        page: 1\n    }\n\n    componentDidMount() {\n        this.loadFilms();\n    }\n\n    loadFilms = async (page = 1) => {\n        const response = await api.get(`/trending/movie/day?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=en-US&page=${page}`);\n        const {results,  ...info} = response.data;\n        this.setState({\n            results: [...this.state.results, ...results],\n            info,\n            page\n        });\n    }\n\n    nextPage = () =>{\n        const {page, info} = this.state;\n        const pageNumber = page + 1;\n        this.loadFilms(pageNumber);\n    }\n\n    render(){\n        const {results, page, info} = this.state;\n\n        const films = results.map((film, index) => {\n            return (\n                <div className=\"film col\" key={index}>\n                    <Link to={`/movie/${film.id}`}>\n                        <img src={\"https://image.tmdb.org/t/p/w185/\" + film.poster_path} />\n                    </Link>\n                    <Link to={`/movie/${film.id}`}>\n                        <p className=\"movieListTitle\">{film.title}</p>\n                    </Link>\n                </div>\n            )\n        });\n\n        return (\n            <div className=\"row\">\n                <div className=\"row\">\n                    {films}\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button className=\"btn btn-primary\" disabled={page === info.pages} onClick={this.nextPage}>Load More</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MovieList;","import React, {Component} from 'react';\nimport MovieList from '../components/MoviesList';\n\n\nexport default class Home extends Component{\n    render(){\n        return(\n            <div className=\"container mt-5 pt-5\">\n                <MovieList />\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport api from '../services/api';\nimport '../styles/Styles.css';\n\n\n\nexport default class Movie extends Component{\n    constructor() {\n        super();\n\n        this.state = {\n            movie:{},\n            genres:{}\n        };\n    }\n\n    async componentDidMount(){\n        this.loadFilm();\n    }\n\n    componentDidUpdate() {\n        this.posterPath.style.backgroundImage = 'url(http://image.tmdb.org/t/p/original' + this.state.movie.backdrop_path + ')';\n    }\n\n    convertToDolar = value => {\n        return (\n            `$${value.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}` || null\n        );\n    };\n\n    loadFilm = async () => {\n        const {id} = this.props.match.params;\n\n        let res = await api.get(`/movie/${id}?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=en-US`);\n        let {data} = await res.data;\n\n        this.setState({\n            movie: res.data,\n            genres: res.data.genres\n        });\n    }\n\n\n    render(){\n        const {movie} = this.state;\n        const genre = this.state.genres;\n\n        function RenderGenre(props) {\n            const genres = props.genres;\n            let nestedArray = [],\n            resultString;\n            if(genres !== undefined){\n                genres.forEach(function(item){\n                    nestedArray.push(item.name);\n                });\n            }\n\n            resultString = nestedArray.join(', ');\n            \n            return (\n                <span>{resultString}</span>\n            )\n        }\n\n        return(\n            <div className=\"fluid-container filmPage\" ref={div => {this.posterPath = div;}}>\n                {this.state.movie.length === 0 ? (\n                    <div>Loading...</div>\n                ) : (\n                    <div className=\"container mt-5 pt-5\">\n                        <div className=\"col-12\">\n                            <div className=\"row filmInfo\">\n                                <div className=\"col-12  pl-0\">\n                                    <div className=\"col-4\">\n                                        <img src={\"https://image.tmdb.org/t/p/w342/\" + movie.poster_path} />\n                                    </div>\n\n                                    <div className=\"col-8 pt-3\">\n                                        <div className=\"col-12\">\n                                            <h1 className=\"filmTitle\">{movie.title}</h1>\n                                            <h2 className=\"filmTagLine\">{movie.tagline}</h2>\n                                            <p className=\"filmOverview\">{movie.overview}</p>\n                                        </div>\n\n                                        <div className=\"col-12\">\n                                            <p><strong>Running Time:</strong> {movie.runtime} mins</p>\n                                            <p><strong>Release Date:</strong> {movie.release_date}</p>\n                                            <p><strong>Budget:</strong> {this.convertToDolar(movie.budget || 0)}</p>\n                                            <p><strong>Revenue:</strong> {this.convertToDolar(movie.revenue || 0)}</p>\n                                        </div>\n\n                                        <div className=\"col-12\">\n                                            {genre.length > 0 &&\n                                                <p><strong>Revenue:</strong> <RenderGenre genres={genre} /></p>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\nimport Home from './pages/Home';\nimport Movie from './pages/Movie';\n\nconst Routes = () => (\n    <HashRouter>\n        <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route path=\"/movie/:id\" component={Movie}></Route>\n        </Switch>\n    </HashRouter>\n);\n\nexport default Routes;","import React, {Component} from 'react';\nimport Navigation from './components/Navigation';\nimport MovieList from './components/MoviesList';\nimport './App.css';\nimport Routes from './routes';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div>\n          <Navigation />\n          <div className=\"fluid-container\">\n            <Routes />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}