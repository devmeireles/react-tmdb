{"version":3,"sources":["components/Navigation.js","services/api.js","components/MoviesList.js","pages/Home.js","components/RenderGenrer.js","components/RenderCast.js","components/RenderTrailers.js","components/RenderKeyWords.js","components/RenderImages.js","components/RenderCollection.js","pages/Movie.js","components/RenderSimilarMovie.js","pages/People.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","fixed","isOpen","language","setState","localStorage","setItem","window","location","reload","_this2","document","addEventListener","scrollY","_this3","react_default","a","createElement","Navbar","color","inverse","toggleable","expand","className","NavbarToggler","right","onClick","index_esm","size","Collapse","navbar","Nav","NavItem","NavLink","href","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","DropdownItem","changeLanguage","React","Component","api","axios","create","baseURL","MovieList","results","info","page","loadFilms","_callee","type","id","response","_response$data","_args","arguments","regenerator_default","wrap","_context","prev","next","length","undefined","getItem","t0","get","concat","sent","abrupt","data","objectWithoutProperties","toConsumableArray","stop","nextPage","_this$state","pageNumber","_this$state2","films","map","film","index","key","react_router_dom","to","src","poster_path","title","disabled","pages","Home","MoviesList","RenderGenrer","resultString","genres","nestedArray","forEach","item","push","name","join","RenderCast","visible","loadMore","casts","slice","person","profile_path","style","maxWidth","character","department","RenderTrailers","trailers","video","frameBorder","RenderKeyWords","keyWords","keyWord","RenderImages","images","image","file_path","RenderCollection","collection","parts","overview","Movie","convertToDolar","value","toFixed","replace","loadFilm","asyncToGenerator","mark","res","match","params","movie","belongs_to_collection","loadCollection","loadCast","_callee2","_context2","cast","crew","loadVideos","_callee3","_context3","filter","trailer","loadKeyWords","_callee4","_context4","keywords","loadImages","_callee5","_context5","backdrops","posters","_ref6","_callee6","_context6","_x","apply","toggleCast","toggleMedia","activeTabCast","activeTabMedia","tab","posterPath","backgroundImage","backdrop_path","nextProps","pathname","ref","div","tagline","components_RenderGenrer","fa_index_esm","release_date","substring","runtime","status","budget","revenue","components_RenderKeyWords","components_RenderCollection","tabs","classnames","active","TabContent","activeTab","TabPane","tabId","Row","Col","sm","components_RenderCast","components_RenderTrailers","components_RenderImages","People","loadPeople","profile","loadMovies","Routes","react_router","exact","path","component","render","App","components_Navigation","routes","Boolean","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22570c7d.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nimport { IoMdMenu } from 'react-icons/io';\n\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n\n    this.state = {\n      fixed: false,\n      isOpen: false,\n      language: 'en-US',\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  changeLanguage(language){\n    localStorage.setItem('language', language);\n\n    window.location.reload();\n  }\n\n  componentDidMount() {\n    document.addEventListener('scroll', () => {\n      if(window.scrollY > 200)  {\n        this.setState({\n          fixed: true\n        });\n      }else{\n        this.setState({\n          fixed: false\n        });\n      }\n    \n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <Navbar color=\"inverse\" inverse toggleable expand=\"md\" className={this.state.fixed ? 'fixed-menu': 'fixed-top'}>\n        <NavbarToggler right onClick={this.toggle}>\n          <IoMdMenu color=\"#FFF\" size={30} className=\"pb-0 pb-md-2\" />\n        </NavbarToggler>\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/react-tmdb/\">Home</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Movies\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  Trending\n                </DropdownItem>\n                <DropdownItem>\n                  Upcoming\n                </DropdownItem>\n                <DropdownItem>\n                  Top Rated\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                TV Shows\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  Trending\n                </DropdownItem>\n                <DropdownItem>\n                  Upcoming\n                </DropdownItem>\n                <DropdownItem>\n                  Top Rated\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            <NavItem>\n              <NavLink href=\"#\">Peoples</NavLink>\n            </NavItem>\n          </Nav>\n\n\n          <Nav className=\"ml-auto\" navbar>\n            <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Language\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem onClick={() => { this.changeLanguage('en-US'); }}>\n                    English\n                  </DropdownItem>\n                  <DropdownItem onClick={() => { this.changeLanguage('es-ES'); }}>\n                    Spanish                    \n                  </DropdownItem>\n                  <DropdownItem onClick={() => { this.changeLanguage('pt-BR'); }}>\n                    Portuguese\n                  </DropdownItem>\n\n                  <DropdownItem onClick={() => { this.changeLanguage('zh-CN'); }}>\n                    Chinese\n                  </DropdownItem>\n\n                  <DropdownItem onClick={() => { this.changeLanguage('ar-SA'); }}>\n                    Arabic\n                  </DropdownItem>\n\n                  <DropdownItem onClick={() => { this.changeLanguage('ru-RU'); }}>\n                    Russian\n                  </DropdownItem>\n\n                  <DropdownItem onClick={() => { this.changeLanguage('ja-JA'); }}>\n                    Japanese\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n    )\n  }\n}\n\nexport default Navigation;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL:'https://api.themoviedb.org/3'\n});\n\nexport default api;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport api from '../services/api';\nimport '../styles/Styles.css';\n\nclass MovieList extends React.Component {\n    state = {\n        results: [],\n        info: {},\n        page: 1\n    }\n\n    componentDidMount() {\n        this.loadFilms();\n    }\n\n    loadFilms = async (page = 1) => {\n        const language = localStorage.getItem('language');\n        const type = this.props.type;\n        const id = this.props.id;\n\n        switch(type){\n            case 'similar':\n                var response = await api.get(`/movie/${id}/similar?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=${language}&page=${page}`);\n            break;\n\n            case 'recommendation':\n                var response = await api.get(`/movie/${id}/recommendations?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=${language}&page=${page}`);\n            break;\n\n            default:\n                var response = await api.get(`/trending/movie/day?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=${language}&page=${page}`);\n        }\n\n        \n        const {results,  ...info} = response.data;\n        this.setState({\n            results: [...this.state.results, ...results],\n            info,\n            page\n        });\n    }\n\n    nextPage = () =>{\n        const {page, info} = this.state;\n        const pageNumber = page + 1;\n        this.loadFilms(pageNumber);\n    }\n\n    render(){\n        const {results, page, info} = this.state;\n\n        const films = results.map((film, index) => {\n            return (\n                <div className=\"film col-6 col-md-3\" key={index}>\n                    <Link to={`/movie/${film.id}`}>\n                        <img src={\"https://image.tmdb.org/t/p/w185/\" + film.poster_path} className=\"img-fluid\" />\n                    </Link>\n                    <Link to={`/movie/${film.id}`}>\n                        <p className=\"movieListTitle\">{film.title}</p>\n                    </Link>\n                </div>\n            )\n        });\n\n        return (\n            <div className=\"row\">\n                <div className=\"row\">\n                    {films}\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button className=\"btn btn-primary\" disabled={page === info.pages} onClick={this.nextPage}>Load More</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MovieList;","import React, {Component} from 'react';\nimport MovieList from '../components/MoviesList';\n\n\nexport default class Home extends Component{\n    render(){\n        return(\n            <div className=\"container mt-5 pt-5\">\n                <MovieList />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nclass RenderGenrer extends Component {\n    render() {\n        const genres = this.props.genres;\n        let nestedArray = [],\n        resultString;\n\n        if(genres !== undefined){\n            genres.forEach(function(item){\n                nestedArray.push(item.name);\n            });\n        }\n\n        resultString = nestedArray.join(', ');\n\n        return (\n            <span>{resultString}</span>\n        );\n    }\n}\n\nexport default RenderGenrer;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nclass RenderCast extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            visible: 6\n        }\n\n        this.loadMore = this.loadMore.bind(this);\n    }\n\n    loadMore() {\n        this.setState((prev) => {\n            return {visible: prev.visible + 6};\n        });\n    }\n    \n\n    render() {\n        const casts = this.props.casts;\n        return(\n            <div className=\"row\">\n                {casts.slice(0, this.state.visible).map((person, index) => (\n                    <div className=\"col-4 col-md-2\" key={index}>\n                        <Link to={`/people/${person.id}`} className=\"linkDefault\">\n                            <img \n                                className=\"rounded mx-auto d-block\"\n                                src={person.profile_path\n                                    ? `https://image.tmdb.org/t/p/w185/${person.profile_path}`\n                                    : `http://www.simpleimageresizer.com/_uploads/photos/56ebef2e/person_8x10_1_80x120.png`}\n                                style={{maxWidth:80}}\n                            />\n                            <p className=\"text-center\">\n                                <span className=\"castName\">{person.name}</span> <br />\n                                <span className=\"castPosition\">{person.character ? person.character : person.department}</span>\n                            </p>\n                        </Link>\n                    </div>\n                ))}\n                \n                {this.state.visible < casts.length &&\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col text-center\">\n                                <button onClick={this.loadMore} type=\"button\" className=\"load-more\">Load more</button>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n        \n\n    }\n}\n\n\n\nexport default RenderCast;","import React, { Component } from 'react';\n\nclass RenderTrailers extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            visible: 2\n        }\n\n        this.loadMore = this.loadMore.bind(this);\n    }\n\n    loadMore() {\n        this.setState((prev) => {\n            return {visible: prev.visible + 2};\n        });\n    }\n\n    render(){\n        const trailers = this.props.trailers;\n        return(\n            <div className=\"col-12\">\n                <div className=\"row\">\n                    {trailers.slice(0, this.state.visible).map((video, index) => (\n                        <div className=\"col-12 col-md-6 mt-4\" key={index}>\n                            <div className=\"embed-responsive embed-responsive-16by9\">\n                                <iframe className=\"embed-responsive-item\" type=\"text/html\" src={`https://www.youtube.com/embed/`+ video.key} key={index} frameBorder=\"0\"/>\n                            </div>\n                        </div>\n                    ))}\n\n                    {this.state.visible < trailers.length &&\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col text-center\">\n                                    <button onClick={this.loadMore} type=\"button\" className=\"load-more\">Load more</button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RenderTrailers;","import React, { Component } from 'react';\n\nclass RenderKeyWords extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        const keyWords = this.props.keyWords;\n        return(\n            <div className=\"col-12\">\n                <div className=\"row\">\n                    {keyWords.map((keyWord, index) => (\n                        <a href=\"#\" className=\"badge p-2 m-2 keyWords\" key={index}>{keyWord.name}</a>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RenderKeyWords;","import React, { Component } from 'react';\n\nclass RenderImages extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            visible: 4\n        }\n\n        this.loadMore = this.loadMore.bind(this);\n    }\n\n    loadMore() {\n        this.setState((prev) => {\n            return {visible: prev.visible + 2};\n        });\n    }\n\n    render(){\n        const images = this.props.images;\n        return(\n            <div className=\"col-12\">\n                <div className=\"row\">\n                    {images.slice(0, this.state.visible).map((image, index) => (\n                        <div className=\"col-12 col-md-6 mt-4\" key={index}>\n                            <img src={`https://image.tmdb.org/t/p/w500/` + image.file_path} className=\"img-thumbnail\"></img>\n                        </div>\n                    ))}\n\n                    {this.state.visible < images.length &&\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col text-center\">\n                                    <button onClick={this.loadMore} type=\"button\" className=\"load-more\">Load more</button>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RenderImages;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nclass RenderCollection extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        const collection = this.props.collection;\n        const parts = collection.parts;\n\n        return(\n            <div className=\"col-12\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h5 className=\"mb-4 pt-2\">{collection.name}</h5>\n                        <p>{collection.overview}</p>\n                    </div>\n\n                    <div className=\"row\">\n                        {parts ?\n                            parts.map((film, index) => (\n                                <div className=\"col-6 col-md-12 pt-3\" key={index}>\n                                    <Link to={`/movie/${film.id}`}>\n                                        <img src={\"https://image.tmdb.org/t/p/w185/\" + film.poster_path} className=\"rounded mx-auto d-block img-fluid\"/>\n                                        <p className=\"movieListTitle\" style={{color:\"#000\"}}>{film.title}</p>\n                                    </Link>\n                                </div>\n                            )) \n                            : null\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default RenderCollection;","import React, {Component} from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport {Link} from 'react-router-dom';\nimport { FaCalendarAlt, FaClock, FaAngleDown } from 'react-icons/fa';\nimport RenderGenrer from '../components/RenderGenrer';\nimport RenderCast from '../components/RenderCast';\nimport RenderTrailers from '../components/RenderTrailers';\nimport api from '../services/api';\nimport '../styles/Styles.css';\nimport RenderKeyWords from '../components/RenderKeyWords';\nimport RenderImages from '../components/RenderImages';\nimport RenderCollection from '../components/RenderCollection';\nimport RenderSimilarMovie from '../components/RenderSimilarMovie';\nimport MovieList from '../components/MoviesList';\n\n\n\nexport default class Movie extends Component{\n    constructor(props) {\n        super(props);\n\n        this.toggleCast = this.toggleCast.bind(this);\n        this.toggleMedia = this.toggleMedia.bind(this);\n\n        this.state = {\n            activeTabCast: '1',\n            activeTabMedia: '1',\n            movie:{},\n            genres:{},\n            cast:{},\n            crew:{},\n            trailers:{},\n            keyWords:{},\n            backdrops:{},\n            posters:{},\n            collection:{}\n        };\n    }\n\n    toggleCast(tab) {\n        if (this.state.activeTabCast !== tab) {\n            this.setState({\n                activeTabCast: tab\n            });\n        }\n    }\n\n    toggleMedia(tab) {\n        if (this.state.activeTabMedia !== tab) {\n            this.setState({\n                activeTabMedia: tab\n            });\n        }\n    }\n\n    async componentDidMount(){\n        this.loadFilm();\n        this.loadCast();\n        this.loadVideos();\n        this.loadKeyWords();\n        this.loadImages();\n    }\n\n    componentDidUpdate() {\n        this.posterPath.style.backgroundImage = 'url(http://image.tmdb.org/t/p/original' + this.state.movie.backdrop_path + ')';\n        document.title = 'The Movie DB - '+this.state.movie.title;\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if(nextProps.location.pathname != this.props.location.pathname){\n            window.location.reload();\n        }\n        return true;\n    }\n\n\n    convertToDolar = value => {\n        return (\n            `$${value.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}` || null\n        );\n    };\n\n    loadFilm = async () => {\n        const language = localStorage.getItem('language');\n        const {id} = this.props.match.params;\n        let res = await api.get(`/movie/${id}?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=${language}`);\n\n        this.setState({\n            movie: res.data,\n            genres: res.data.genres,\n        });\n\n        if(this.state.movie.belongs_to_collection){\n            this.loadCollection(this.state.movie.belongs_to_collection.id);\n        }\n    }\n\n    loadCast = async () => {\n        const language = localStorage.getItem('language');\n        const {id} = this.props.match.params;\n        let res = await api.get(`/movie/${id}/credits?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=${language}`);\n\n        this.setState({\n            cast: res.data.cast,\n            crew: res.data.crew\n        });\n    }\n\n    loadVideos = async () => {\n        const language = localStorage.getItem('language');\n        const {id} = this.props.match.params;\n        const res = await api.get(`/movie/${id}/videos?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=${language}`);\n        \n        let trailers = res.data.results.filter(function(trailer){\n            return trailer.type == 'Trailer';\n        });\n\n        this.setState({\n            trailers: trailers\n        });\n    }\n\n    loadKeyWords = async () => {\n        const language = localStorage.getItem('language');\n        const {id} = this.props.match.params;\n        const res = await api.get(`/movie/${id}/keywords?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=${language}`);\n        \n        this.setState({\n            keyWords: res.data.keywords\n        });\n    }\n\n    loadImages = async () => {\n        const {id} = this.props.match.params;\n        const res = await api.get(`/movie/${id}/images?api_key=7de1111e4ea9fa0dc45893f3c81297b3`);\n        \n        this.setState({\n            backdrops: res.data.backdrops,\n            posters: res.data.posters\n        });\n    }\n\n    loadCollection = async (id) => {\n        const language = localStorage.getItem('language');\n        const res = await api.get(`/collection/${id}?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=${language}`);\n        this.setState({\n            collection: res.data\n        });\n    }\n\n\n    render(){\n        const {movie} = this.state;\n        const genre = this.state.genres;\n        const cast = this.state.cast;\n        const crew = this.state.crew;\n        const trailers = this.state.trailers;\n        const keyWords = this.state.keyWords;\n        const backdrops = this.state.backdrops;\n        const posters = this.state.posters;\n        const collection = this.state.collection;\n\n        return(\n            <div className=\"fluid-container\">\n                <div className=\"filmPage\" ref={div => {this.posterPath = div;}}>\n                    <div className=\"filmHeader\">\n                        <div className=\"col-12 col-sm-12 col-md-4 ml-0 ml-md-5\">\n                            <h1 className=\"filmTitle\">{movie.title}</h1>\n                            <h2 className=\"filmTagLine\">{movie.tagline ? movie.tagline : null }</h2>\n                        </div>\n\n                        <div className=\"col-12 col-sm-12 col-md-4 ml-0 ml-md-5 filmOverview\">\n                            <p>{movie.overview}</p>\n                            <p><RenderGenrer genres={movie.genres} /></p>\n                            <p>\n                                <span className=\"mr-5\"><FaCalendarAlt /> {movie.release_date ? movie.release_date.substring(0,4) : null}</span>\n                                <span className=\"ml-5\"><FaClock /> {movie.runtime ? movie.runtime + \" mins\" : null}</span>\n                            </p>\n                        </div>\n\n                        <div className=\"col-12\">\n                            <div className=\"d-flex justify-content-center\">\n                                <FaAngleDown size={30}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"filmInfo\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12 col-sm-12 col-md-3\">\n                                <div className=\"col-12\">\n                                    <p><strong>{movie.title}</strong></p>\n                                    <p><strong>Status:</strong> {movie.status || null}</p>\n                                    <p><strong>Running Time:</strong> {movie.runtime || null} mins</p>\n                                    <p><strong>Release Date:</strong> {movie.release_date || null}</p>\n                                    <p><strong>Budget:</strong> {this.convertToDolar(movie.budget || 0)}</p>\n                                    <p><strong>Revenue:</strong> {this.convertToDolar(movie.revenue || 0)}</p>\n                                </div>\n\n                                <div className=\"col-12\">\n                                    {keyWords.length > 0 &&\n                                        <div className=\"row keyWordsBox mt-5\">\n                                            <div className=\"col-12\">\n                                                <h5 className=\"mb-4 pt-2\">Keywords</h5>\n                                            </div>\n                                            <RenderKeyWords keyWords={keyWords} />\n                                        </div>\n                                    }\n                                </div>\n\n                                <div className=\"col-12\">\n                                    {collection &&\n                                        <div className=\"row collectionBox mt-5\">\n                                            <RenderCollection collection={collection} />\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n\n                            <div className=\"col-12 col-sm-12 col-md-8\">\n                                <div className=\"col-12\">\n                                    <Nav tabs>\n                                        <NavItem>\n                                            <NavLink\n                                                className={classnames({ active: this.state.activeTabCast === '1' })}\n                                                onClick={() => { this.toggleCast('1'); }}\n                                            >\n                                                Principal Cast\n                                            </NavLink>\n                                        </NavItem>\n\n                                        <NavItem>\n                                            <NavLink\n                                                className={classnames({ active: this.state.activeTabCast === '2' })}\n                                                onClick={() => { this.toggleCast('2'); }}\n                                            >\n                                                Principal Crew\n                                            </NavLink>\n                                        </NavItem>\n                                    </Nav>\n\n                                    <TabContent activeTab={this.state.activeTabCast}>\n                                        <TabPane tabId=\"1\">\n                                            <Row>\n                                                <Col sm=\"12\">\n                                                {cast.length > 0 &&\n                                                    <div className=\"row castBox mt-2\">\n                                                        <RenderCast casts={cast} />\n                                                    </div>\n                                                }\n                                                </Col>\n                                            </Row>\n                                        </TabPane>\n\n                                        <TabPane tabId=\"2\">\n                                            <Row>\n                                                <Col sm=\"12\">\n                                                {crew.length > 0 &&\n                                                    <div className=\"row castBox mt-2\">\n                                                        <RenderCast casts={crew} />\n                                                    </div>\n                                                }\n                                                </Col>\n                                            </Row>\n                                        </TabPane>\n                                    </TabContent>\n                                </div>\n\n                                <div className=\"col-12\">\n                                    <Nav tabs>\n                                        <NavItem>\n                                            <NavLink\n                                                className={classnames({ active: this.state.activeTabMedia === '1' })}\n                                                onClick={() => { this.toggleMedia('1'); }}\n                                            >\n                                                Videos\n                                            </NavLink>\n                                        </NavItem>\n\n                                        <NavItem>\n                                            <NavLink\n                                                className={classnames({ active: this.state.activeTabMedia === '2' })}\n                                                onClick={() => { this.toggleMedia('2'); }}\n                                            >\n                                                Backdrops\n                                            </NavLink>\n                                        </NavItem>\n\n                                        <NavItem>\n                                            <NavLink\n                                                className={classnames({ active: this.state.activeTabMedia === '3' })}\n                                                onClick={() => { this.toggleMedia('3'); }}\n                                            >\n                                                Posters\n                                            </NavLink>\n                                        </NavItem>\n                                    </Nav>\n\n                                    <TabContent activeTab={this.state.activeTabMedia}>\n                                        <TabPane tabId=\"1\">\n                                            <Row>\n                                                <Col sm=\"12\">\n                                                    {trailers.length > 0 &&\n                                                        <div className=\"row trailerBox mt-2\">\n                                                            <RenderTrailers trailers={trailers} />\n                                                        </div>\n                                                    }\n                                                </Col>\n                                            </Row>\n                                        </TabPane>\n\n                                        <TabPane tabId=\"2\">\n                                            <Row>\n                                                <Col sm=\"12\">\n                                                    {backdrops.length > 0 &&\n                                                        <div className=\"row castBox mt-2\">\n                                                            <RenderImages images={backdrops} />\n                                                        </div>\n                                                    }\n                                                </Col>\n                                            </Row>\n                                        </TabPane>\n\n                                        <TabPane tabId=\"3\">\n                                            <Row>\n                                                <Col sm=\"12\">\n                                                    {posters.length > 0 &&\n                                                        <div className=\"row castBox mt-2\">\n                                                            <RenderImages images={posters} />\n                                                        </div>\n                                                    }\n                                                </Col>\n                                            </Row>\n                                        </TabPane>\n                                    </TabContent>\n                                </div>\n\n                                {movie.id &&\n                                <div className=\"row pt-5 mt-5\">\n                                    <div className=\"col-12\">\n                                        <h3 className=\"text-center pb-4\">Recommendations</h3>\n                                    </div>\n                                    <div className=\"col-12\">\n                                        <MovieList type=\"recommendation\" id={movie.id} />\n                                    </div>\n                                </div>\n                                }\n\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n                \n        );\n    }\n}\n","import React, {Component} from 'react';\nimport api from '../services/api';\n\nexport default class RenderSimilarMovie extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    async componentDidMount(){\n        this.loadSimilar();\n    }\n\n    loadSimilar = async () => {\n        const id = this.props.id;\n        let res = await api.get(`/movie/${id}/similar?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=en-US`);\n\n        console.log(res.data.results)\n        this.setState({\n            movie: res.data.results,\n        });\n\n    }\n\n    render(){\n\n        return (\n            <h1>similar</h1>\n        )\n    }\n}","import React, {Component} from 'react';\nimport api from '../services/api';\n\nexport default class People extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            profile : {},\n        };\n    }\n\n    async componentDidMount(){\n        this.loadPeople();\n        this.loadMovies();\n    }\n\n    loadPeople = async () => {\n        const {id} = this.props.match.params;\n        const response = await api.get(`/person/${id}/?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=en-US`);\n        \n        this.setState({\n            profile: response.data.profile_path,\n        });\n    }\n\n    loadMovies = async () => {\n        const {id} = this.props.match.params;\n        const response = await api.get(`/person/${id}/movie_credits?api_key=7de1111e4ea9fa0dc45893f3c81297b3&language=en-US`);\n\n        this.setState({\n            cast: response.data.cast,\n            crew: response.data.crew\n        });\n    }\n\n    render(){\n        return(\n            <h1>{this.state.name}</h1>\n        )\n    }\n}","import React from 'react';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Movie from './pages/Movie';\nimport People from './pages/People';\n\nconst Routes = () => (\n    <HashRouter>\n        <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route path=\"/movie/:id\" component={Movie}></Route>\n            <Route path=\"/people/:id\" component={People}></Route>\n            <Route render={ () => <h1>404 Error</h1> } />\n        </Switch>\n    </HashRouter>\n);\n\nexport default Routes;","import React, {Component} from 'react';\nimport Navigation from './components/Navigation';\nimport MovieList from './components/MoviesList';\nimport './App.css';\nimport Routes from './routes';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    \n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div>\n          <Navigation />\n          <div className=\"fluid-container\">\n            <Routes />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}